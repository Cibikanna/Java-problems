/*Alogrithm:
    ->travarse from last and find the value which the next value is small than the index
    ->traverse an array from last fing the larger number which is larger than smaller value
    ->then swap the smaller number and larger elements in array
    ->reverse the array after the larger element
    ->print the final permutated value*/
    
/*next permutation:
    sample input = [1 2 3 4]
    output = [1 2 4 3]
    
    Input = [1 4 3 2]
    Output = [2 1 3 4]*/
import java.util.*;
class HelloWorld {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt(),temp=0,sn=0,ln=0;
        int arr[] = new int[n];
        //getting input of array
        for(int i=0;i<n;i++)
            arr[i] = sc.nextInt();
            
        //finding smaller number when traversing
        for(int i=n-1;i>0;i--)
        {
            if(arr[i-1]<arr[i]){
                 sn=arr[i-1];
                 break;
            }
        }
        //finding larger number compare to smaller number
        for(int i=n-1;i>=0;i--)
        {
            if(arr[i]>sn)
            {
              ln=arr[i];
              break;
            }
        }
        //swapping
        for(int i=n-1;i>=0;i--)
        {
            for(int j=i-1;j>=0;j--)
            {
                if(arr[i]==ln && arr[j]==sn)
                 {
                    temp = arr[i];
                    arr[i] = arr[j];
                    arr[j] = temp;
                    break;
                 }
            }
        }
        //reversing
        int rev[] = new int[n+n];//to store an reverse array
        int k=0,f=0;
        for(int i=0;i<n;i++)
        {
            rev[k++]=arr[i];
            if(arr[i]==ln)
            {
                for(int j=n-1;j>=i;j--)
                {
                    rev[k++] = arr[j];
                    f=1;
                }
            }
            if(f==1)
                break;
        }
        for(int i=0;i<n;i++)
            System.out.print(rev[i]+" ");
    }
}
